apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: dvb.ci.0.0.1
spec:
  serviceAccountName: dvb.ci.0.0.1
  volumes:
    - name: docker-config
      secret:
        items:
          - key: .dockerconfigjson
            path: config.json
        secretName: 'docker-config'
  entrypoint: ci-tasks
  onExit: exit-handler
  templates:
    - name: ci-tasks
      inputs:
        parameters:
          - name: CF_API_KEY
            default: 'codefresh-token'
          - name: DOCKERFILE
            default: Dockerfile
          - name: IMAGE_NAME
          - name: IMAGE_TAG
            default: latest
          - name: GIT_BRANCH
          - name: GIT_COMMIT_MESSAGE
          - name: GIT_COMMIT_URL
          - name: GIT_PROVIDER
            default: github
          - name: GIT_REPO_NAME
          - name: GIT_REPO_OWNER
            default: dustinvanbuskirk
          - name: GIT_REPO_URL
          - name: GIT_REVISION
          - name: GIT_TOKEN_SECRET
            default: github-token
      dag:
        tasks:
          - name: report-commit-status-start
            templateRef:
              name: argo-hub.github.0.0.5
              template: commit-status
            arguments:
              parameters:
              - name: BUILD_BASE_URL
                value: 'https://g.codefresh.io/2.0/workflows/{{ workflow.name }}'
              - name: REPO_OWNER
                value: '{{ inputs.parameters.GIT_REPO_OWNER }}'
              - name: REPO_NAME
                value: '{{ inputs.parameters.GIT_REPO_NAME }}'
              - name: REVISION
                value: '{{ inputs.parameters.GIT_REVISION }}'
              - name: STATE
                value: 'pending'
              - name: CONTEXT
                value: '{{ inputs.parameters.IMAGE_NAME }}'
              - name: DESCRIPTION
                value: 'Workflow is running'
              - name: GITHUB_TOKEN_SECRET
                value: 'github-token'

          - name: build-docker-image
            templateRef:
              name: argo-hub.kaniko.0.0.1
              template: build
            arguments:
              parameters:
                - name: REPO
                  value: '{{ inputs.parameters.GIT_REPO_URL }}'
                - name: REVISION
                  value: '{{ inputs.parameters.GIT_REVISION }}'
                - name: IMAGE_NAME
                  value: '{{ inputs.parameters.GIT_REPO_OWNER }}/{{ inputs.parameters.IMAGE_NAME }}'
                - name: GIT_TOKEN_SECRET
                  value: '{{ inputs.parameters.GIT_TOKEN_SECRET }}'
                - name: DOCKERFILE
                  value: '{{ inputs.parameters.DOCKERFILE }}'
                - name: CONTEXT
                  value: '{{ inputs.parameters.IMAGE_NAME }}'
                - name: TAG
                  value: '{{ inputs.parameters.IMAGE_TAG }}'
            depends: report-commit-status-start

          - name: report-image-info
            templateRef:
              name: argo-hub.codefresh-csdp.1.1.3
              template: report-image-info
            arguments:
              parameters:
                - name: IMAGE_NAME
                  value: '{{ inputs.parameters.GIT_REPO_OWNER }}/{{ inputs.parameters.IMAGE_NAME }}:{{ inputs.parameters.IMAGE_TAG }}'
                - name: CF_API_KEY
                  value: '{{ inputs.parameters.CF_API_KEY }}'
                - name: GIT_BRANCH
                  value: '{{ inputs.parameters.GIT_BRANCH }}'
                - name: GIT_COMMIT_MESSAGE
                  value: '{{ workflow.parameters.GIT_COMMIT_MESSAGE }}'
                - name: GIT_COMMIT_URL
                  value: '{{ inputs.parameters.GIT_COMMIT_URL }}'
                - name: GIT_PROVIDER
                  value: '{{ inputs.parameters.GIT_PROVIDER }}'
                - name: GIT_REVISION
                  value: '{{ inputs.parameters.GIT_REVISION }}'
                - name: DOCKERHUB_PASSWORD
                  value: 'registry-creds'
                - name: PASSWORD_SECRET_KEY
                  value: 'password'
                - name: DOCKERHUB_USERNAME
                  value: 'registry-creds'
                - name: USERNAME_SECRET_KEY
                  value: 'username'
                - name:  WORKFLOW_NAME
                  value: '{{ workflow.name }}'
                - name:  WORKFLOW_URL
                  value: 'https://g.codefresh.io/2.0/workflows/{{ workflow.name}}'
                - name: LOGS_URL
                  value: 'https://g.codefresh.io/2.0/workflows/{{ workflow.name}}?drawer=workflow-logs-drawer'
            depends: build-docker-image

          - name: test-image
            template: test
            arguments:
              parameters:
                - name: IMAGE
                  value: '{{ inputs.parameters.GIT_REPO_OWNER }}/{{ inputs.parameters.IMAGE_NAME }}:{{ inputs.parameters.IMAGE_TAG }}'
            depends: build-docker-image

          - name: image-enricher-jira-info
            templateRef:
              name: argo-hub.codefresh-csdp.1.1.3
              template: image-enricher-jira-info
            arguments:
              parameters:
                - name: CF_API_KEY
                  value: '{{ inputs.parameters.CF_API_KEY }}'
                - name: IMAGE_NAME
                  value: '{{ tasks.report-image-info.outputs.parameters.image-name }}'
                - name: JIRA_API_TOKEN_SECRET
                  value: jira-api-creds
                - name: JIRA_HOST_URL
                  value: 'https://codefresh-io.atlassian.net'
                - name: JIRA_MESSAGE
                  value: '{{ inputs.parameters.GIT_BRANCH }}'
                - name: JIRA_PROJECT_PREFIX
                  value: 'SA'
            depends: report-image-info

          - name: image-enricher-git-info
            templateRef:
              name: argo-hub.codefresh-csdp.1.1.3
              template: image-enricher-git-info
            arguments:
              parameters:
                - name: IMAGE_NAME
                  value: '{{ tasks.report-image-info.outputs.parameters.image-name }}'
                - name: IMAGE_SHA
                  value: '{{ tasks.report-image-info.outputs.parameters.image-sha }}'
                - name: CF_API_KEY
                  value: '{{ inputs.parameters.CF_API_KEY }}'
                - name: REPO
                  value: '{{ inputs.parameters.GIT_REPO_OWNER }}/{{ inputs.parameters.GIT_REPO_NAME }}'
                - name: BRANCH
                  value: '{{ inputs.parameters.GIT_BRANCH }}'
                - name: GIT_COMMIT_MESSAGE
                  value: '{{ inputs.parameters.GIT_COMMIT_MESSAGE }}'
                - name: GIT_COMMIT_URL
                  value: '{{ inputs.parameters.GIT_COMMIT_URL }}'
                - name: GITHUB_TOKEN_SECRET_NAME
                  value: github-token
                - name: GIT_PROVIDER
                  value: '{{ inputs.parameters.GIT_PROVIDER }}'
            depends: report-image-info

          - name: deploy
            templateRef:
              name: dvb.cd.0.0.1
              template: deploy-and-promote
            arguments:
              parameters:
                - name: GIT_BRANCH
                  value: '{{ inputs.parameters.GIT_BRANCH }}'
                - name: GIT_REPO_NAME
                  value: '{{ inputs.parameters.GIT_REPO_NAME}}'
                - name: GIT_REPO_OWNER
                  value: '{{ inputs.parameters.GIT_REPO_OWNER}}'
                - name: GIT_REPO_URL
                  value: '{{ inputs.parameters.GIT_REPO_URL}}'
                - name: PROMOTION_TARGET_FILE
                  value: 'values.yaml'
                - name: TARGET_DEPLOYMENT_BRANCH
                  value: 'main'
                - name: TARGET_DEPLOYMENT_REPO_NAME
                  value: '{{ inputs.parameters.GIT_REPO_OWNER}}/{{ inputs.parameters.GIT_REPO_NAME}}'
                - name: TARGET_DEPLOYMENT_REPO_URL
                  value: '{{ inputs.parameters.GIT_REPO_URL}}'
                - name: TARGET_FILE_PATH_PREFIX
                  value: 'argo-voting-app'
                - name: GIT_TOKEN_SECRET
                  value: 'github-token'
                - name: KEY
                  value: '.{{ inputs.parameters.IMAGE_NAME }}.image.tag'
                - name: VALUE
                  value: '{{ inputs.parameters.IMAGE_TAG }}'
            depends: report-image-info

    - name: test
      inputs:
        parameters:
          - name: IMAGE
      container:
        image: '{{ inputs.parameters.IMAGE }}'
        command: [sh, -c]
        args: ["ls"]

    - name: exit-handler
      inputs:
        parameters:
          - name: IMAGE_NAME
          - name: GIT_REPO_NAME
          - name: GIT_REPO_OWNER
            default: dustinvanbuskirk
          - name: GIT_REVISION
      steps:
        - - name: report-commits-status-failure
            when: '{{workflow.status}} =~ "Failed|Error"'
            templateRef:
              name: argo-hub.github.0.0.5
              template: commit-status
            arguments:
              parameters:
                - name: BUILD_BASE_URL
                  value: 'https://g.codefresh.io/2.0/workflows/{{ workflow.name }}'
                - name: REPO_OWNER
                  value: '{{ inputs.parameters.GIT_REPO_OWNER }}'
                - name: REPO_NAME
                  value: '{{ inputs.parameters.GIT_REPO_NAME }}'
                - name: REVISION
                  value: '{{ inputs.parameters.GIT_REVISION }}'
                - name: STATE
                  value: 'failure'
                - name: CONTEXT
                  value: '{{ inputs.parameters.IMAGE_NAME }}'
                - name: DESCRIPTION
                  value: 'Workflow failed'
                - name: GITHUB_TOKEN_SECRET
                  value: 'github-token'

        - - name: report-commits-status-success
            when: '{{workflow.status}} == Succeeded'
            templateRef:
              name: argo-hub.github.0.0.5
              template: commit-status
            arguments:
              parameters:
                - name: BUILD_BASE_URL
                  value: 'https://g.codefresh.io/2.0/workflows/{{ workflow.name }}'
                - name: REPO_OWNER
                  value: '{{ inputs.parameters.GIT_REPO_OWNER }}'
                - name: REPO_NAME
                  value: '{{ inputs.parameters.GIT_REPO_NAME }}'
                - name: REVISION
                  value: '{{ inputs.parameters.GIT_REVISION }}'
                - name: STATE
                  value: 'success'
                - name: CONTEXT
                  value: '{{ inputs.parameters.IMAGE_NAME }}'
                - name: DESCRIPTION
                  value: 'Workflow succeeded'
                - name: GITHUB_TOKEN_SECRET
                  value: 'github-token'
